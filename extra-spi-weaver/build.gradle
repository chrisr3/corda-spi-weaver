plugins {
    id 'corda.osgi-test-conventions'
    id 'biz.aQute.bnd.builder'
    id 'com.jfrog.artifactory'
    id 'maven-publish'
    id 'java-library'
}

description 'Dynamic extra weaving for SPI support.'

dependencies {
    compileOnly "org.osgi:osgi.annotation:$osgiAnnotationVersion"
    compileOnly "org.osgi:osgi.core:$osgiCoreVersion"
    compileOnly "org.osgi:org.osgi.service.serviceloader:$osgiServiceLoaderVersion"
    compileOnly "biz.aQute.bnd:biz.aQute.bndlib:$bndVersion"
    compileOnly "com.google.code.findbugs:jsr305:$jsr305Version"
    compileOnly "org.ow2.asm:asm-commons:$asmVersion"
    compileOnly "org.ow2.asm:asm:$asmVersion"

    testCompileOnly "org.osgi:osgi.core:$osgiCoreVersion"
    testImplementation "org.slf4j:slf4j-api:$slf4jVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testRuntimeOnly "org.apache.aries.spifly:org.apache.aries.spifly.dynamic.framework.extension:$ariesDynamicFrameworkExtensionVersion"
    testRuntimeOnly "com.fasterxml.woodstox:woodstox-core:$woodstoxVersion"
}

def jar = tasks.named('jar', Jar) {
    archiveBaseName = "corda-${project.name}"
    bundle {
        bnd '''\
Bundle-Name: \${project.description}
Bundle-SymbolicName: \${project.group}.\${project.name}
Import-Package: \
    javax.annotation;resolution:=optional, \
    *
-fixupmessages "Export [^,]++,\\\\s++has (\\\\d++),\\\\s++private references "; restrict:=warning; is:=error
-conditionalpackage: \
    org.objectweb.asm.*, \
    aQute.*
'''
    }
}

def wovenBundle = tasks.register('wovenBundle', TestingBundle) {
    archiveClassifier = 'woven'
    from sourceSets.test.output
    sourceSet = sourceSets.test
    include 'net/corda/spi/woven/**'
}

def unwovenBundle = tasks.register('unwovenBundle', TestingBundle) {
    archiveClassifier = 'unwoven'
    from sourceSets.test.output
    sourceSet = sourceSets.test
    include 'net/corda/spi/unwoven/**'
}

artifacts {
    archives wovenBundle, unwovenBundle
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            afterEvaluate {
                artifactId = jar.flatMap { it.archiveBaseName }.get()
            }
        }
    }
}

artifactoryPublish {
    publications 'maven'
}
